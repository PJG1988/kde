From patchwork Thu Oct 24 23:03:25 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Jim Mattson <jmattson@google.com>
X-Patchwork-Id: 11211053
Return-Path: <SRS0=LVJf=YR=vger.kernel.org=kvm-owner@kernel.org>
Received: from mail.kernel.org (pdx-korg-mail-1.web.codeaurora.org
 [172.30.200.123])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 03F9914ED
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 24 Oct 2019 23:03:46 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id D76DD21A4C
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 24 Oct 2019 23:03:45 +0000 (UTC)
Authentication-Results: mail.kernel.org;
	dkim=pass (2048-bit key) header.d=google.com header.i=@google.com
 header.b="mVOmSWgm"
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1733191AbfJXXDp (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Thu, 24 Oct 2019 19:03:45 -0400
Received: from mail-pf1-f202.google.com ([209.85.210.202]:54296 "EHLO
        mail-pf1-f202.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726175AbfJXXDo (ORCPT <rfc822;kvm@vger.kernel.org>);
        Thu, 24 Oct 2019 19:03:44 -0400
Received: by mail-pf1-f202.google.com with SMTP id 2so334095pfv.21
        for <kvm@vger.kernel.org>; Thu, 24 Oct 2019 16:03:44 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=date:in-reply-to:message-id:mime-version:references:subject:from:to
         :cc;
        bh=ZvUs3prfac8nMA+DjbJb3Eq53kw+EBDussXq7EoWCTQ=;
        b=mVOmSWgmDo0egTO90mOaE4VXzmf3Bq6O7o3NZvERc/MGcS6+uvLJMZ920I5g9KWx58
         XZc55Extb5ex2bRzZIjvTuzgaUZGXsC2iI4N5ZmQRtpmpSV/F33ZSJXKkSsISO4xEEZ8
         6w8aM9JHrPm0XCV+wZoTrTsv0D3YiIepzQJE1PbNP9oUwXmUGXdv1gxoEdrTSN/n4dno
         FdXs7UNTheUp0tNxp/KY4btiffb20ebFTFBfgQJRTBhxMG80SpZjkYZMZ6EZeOjIbMcj
         psoo0VoLjoWQEiZ9o+bpRiff67LnkHk1WB00KsuJhOX9aBWKTbIyqwfQS3lgmRG3nsFY
         LX4w==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:in-reply-to:message-id:mime-version
         :references:subject:from:to:cc;
        bh=ZvUs3prfac8nMA+DjbJb3Eq53kw+EBDussXq7EoWCTQ=;
        b=cPvzciJG769C3Hc4G8+xAjq7HjPghwQae5MHHDzdn2S7CmaLWc0av05pJwAnqn4vBS
         bmciJEzWiOcVTkiEh3tUGCR0wHVODXQxXr8NDxEaxUzRviUYLtl+1SnAT1r0iDRAUA8K
         B9V0nw7ppgmeS1XOUqaIsA67mBVFfjE+DeqsYsFho3WduQetXsH9aTp1nIoRbktUnaxR
         W9MvaGUcfyNLehsCdA4DJKLZ5ozEYpmmB7rLMWxtueH5870DYkCz3YpKt2tltIWriXJh
         55fsVGilQj5m/o8mf69CYrBFVY8L/m7lYMITsxdlH91cYtdmvoH5LVnHzwkEpgadWDY4
         +uJw==
X-Gm-Message-State: APjAAAUYx1rwA7QYFcEGTo40OmUKmtAY2FyjXcRMUJdrwIUwnBmBeXtH
        F3+KvsXYCri3xd5B8YeuYwQM6Y059j4QMytKX9MyiHU49TI/z7XvfmUmDT1hqW5VUDdz5wCdVMh
        9d6JJorVTbAqKtQSa+fIdHCnCrB0DC/CP/AEnc0Ss7Y0BdK+CgTIc4VGcq/nJoWE=
X-Google-Smtp-Source: 
 APXvYqwMZOA/EZw6RnhifiGMxU/lx0Ye19kKB++dqwgcMu7FkCg+tIUYfuOZdrDAmi9Q3cdzb673eRPo/wrzZw==
X-Received: by 2002:a63:778f:: with SMTP id s137mr532709pgc.147.1571958223448;
 Thu, 24 Oct 2019 16:03:43 -0700 (PDT)
Date: Thu, 24 Oct 2019 16:03:25 -0700
In-Reply-To: <20191024230327.140935-1-jmattson@google.com>
Message-Id: <20191024230327.140935-2-jmattson@google.com>
Mime-Version: 1.0
References: <20191024230327.140935-1-jmattson@google.com>
X-Mailer: git-send-email 2.24.0.rc0.303.g954a862665-goog
Subject: [PATCH v3 1/3] kvm: Don't clear reference count on kvm_create_vm()
 error path
From: Jim Mattson <jmattson@google.com>
To: kvm@vger.kernel.org, Paolo Bonzini <pbonzini@redhat.com>,
        Sean Christopherson <sean.j.christopherson@intel.com>,
        John Sperbeck <jsperbeck@google.com>,
        Junaid Shahid <junaids@google.com>
Cc: Jim Mattson <jmattson@google.com>
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Defer setting the reference count, kvm->users_count, until the VM is
guaranteed to be created, so that the reference count need not be
cleared on the error path.

Suggested-by: Sean Christopherson <sean.j.christopherson@intel.com>
Signed-off-by: Jim Mattson <jmattson@google.com>
Reviewed-by: Junaid Shahid <junaids@google.com>
---
 virt/kvm/kvm_main.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/virt/kvm/kvm_main.c b/virt/kvm/kvm_main.c
index fd68fbe0a75d2..525e0dbc623f9 100644
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@ -640,7 +640,6 @@ static struct kvm *kvm_create_vm(unsigned long type)
 	mutex_init(&kvm->lock);
 	mutex_init(&kvm->irq_lock);
 	mutex_init(&kvm->slots_lock);
-	refcount_set(&kvm->users_count, 1);
 	INIT_LIST_HEAD(&kvm->devices);
 
 	r = kvm_arch_init_vm(kvm, type);
@@ -682,6 +681,12 @@ static struct kvm *kvm_create_vm(unsigned long type)
 	if (r)
 		goto out_err;
 
+	/*
+	 * kvm_get_kvm() isn't legal while the vm is being created
+	 * (e.g. in kvm_arch_init_vm).
+	 */
+	refcount_set(&kvm->users_count, 1);
+
 	mutex_lock(&kvm_lock);
 	list_add(&kvm->vm_list, &vm_list);
 	mutex_unlock(&kvm_lock);
@@ -697,7 +702,6 @@ static struct kvm *kvm_create_vm(unsigned long type)
 out_err_no_srcu:
 	hardware_disable_all();
 out_err_no_disable:
-	refcount_set(&kvm->users_count, 0);
 	for (i = 0; i < KVM_NR_BUSES; i++)
 		kfree(kvm_get_bus(kvm, i));
 	for (i = 0; i < KVM_ADDRESS_SPACE_NUM; i++)

From patchwork Thu Oct 24 23:03:26 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Jim Mattson <jmattson@google.com>
X-Patchwork-Id: 11211055
Return-Path: <SRS0=LVJf=YR=vger.kernel.org=kvm-owner@kernel.org>
Received: from mail.kernel.org (pdx-korg-mail-1.web.codeaurora.org
 [172.30.200.123])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 65FDE1864
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 24 Oct 2019 23:03:48 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 42F1D2166E
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 24 Oct 2019 23:03:48 +0000 (UTC)
Authentication-Results: mail.kernel.org;
	dkim=pass (2048-bit key) header.d=google.com header.i=@google.com
 header.b="dirNz+mE"
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1733222AbfJXXDr (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Thu, 24 Oct 2019 19:03:47 -0400
Received: from mail-vs1-f73.google.com ([209.85.217.73]:41062 "EHLO
        mail-vs1-f73.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726175AbfJXXDr (ORCPT <rfc822;kvm@vger.kernel.org>);
        Thu, 24 Oct 2019 19:03:47 -0400
Received: by mail-vs1-f73.google.com with SMTP id w21so35537vsi.8
        for <kvm@vger.kernel.org>; Thu, 24 Oct 2019 16:03:46 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=date:in-reply-to:message-id:mime-version:references:subject:from:to
         :cc;
        bh=/BV7uNDFObPZOlRgBYTU85zjLW/xsxNULPw999+cfbg=;
        b=dirNz+mEYUTujXYODoiLrnwE+SBSKWgLC+9GI2iAdK/u4sZGy5reqc1P4GSUmYRTNT
         5fU+yvl+XpwGZ0BPrUKiuy7zIq5q6iNaihfSwEViSy/6G2RlT1ZFSa4FMpl0oRnHFsti
         aTbQe8IWwRVqzMlObhpOaV+8HAqYuU5SBbwTeh1jJdNWlqpIeUX0hFVQ2qifa3A/QWH4
         NbEEk6qdUhR6Rf/bd7x7h1DYwe7loZ5RkWfutj/js+AesZtYz36j4lRA+eeSgZhTBmfY
         kQutKiTreMdwIegBo0UUENkHcCeO/lobCsIZxtNOpoo/dl4mFCDC3RG6cCAPD1tuyU6S
         mh1g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:in-reply-to:message-id:mime-version
         :references:subject:from:to:cc;
        bh=/BV7uNDFObPZOlRgBYTU85zjLW/xsxNULPw999+cfbg=;
        b=eQLT5JMOUOUKadcimGEvL9mZriwEvVmMP1eW4T4JJV7Hdij8WzwgMfEW8kwOFDW1EI
         c/DvMOkgpjYXXOB+yJYMMAPAVfuQDICILbrkAD/XLGoA+oU0GGzO6xqGRiKGuJzsfdlY
         L5PuvbG7AkAizG1lFSr+OAHs/+v77Mw2F3+fjX14yZaQmPFRQsNaBChI9559zLFhfWfA
         k+dBKqsHnQBM0jdjgFyT7MisYy/QjGvTFET/mQRlO5xIydX95ySFLgKzgT7pvsp3HlPZ
         eo5dXPprGZjJgqe+V40+tOiD2CWc832x8OCbe3T9rkLTMwpYJXXpJyRt6pPi7pTvHBay
         2D1w==
X-Gm-Message-State: APjAAAXG4Ue4Zw136kC+d88dUWverp02cDIMPT/3GMax/3AyUbdB378r
        mK063y2R0uvLp6qQm+mnePeeWpYh579t7rXp4TU6g2x12XmLkqr3eRQ7gB72vCoRNYIJS2i1f3u
        jhaVoftNQ346M7UWJxNENJVkZSgQRUEKCcMUWpxH5Bmn7Kokpb3xwmryk4BuVXA0=
X-Google-Smtp-Source: 
 APXvYqzNI2QPlDCRuIgCIoUJs9vZKnq4w+Ub6QFcPJgyCc1VHvR5pW+sHD0Cvnzk+g3dN7DK8T2AM0njVcim5A==
X-Received: by 2002:a9f:31e1:: with SMTP id w30mr72213uad.59.1571958225915;
 Thu, 24 Oct 2019 16:03:45 -0700 (PDT)
Date: Thu, 24 Oct 2019 16:03:26 -0700
In-Reply-To: <20191024230327.140935-1-jmattson@google.com>
Message-Id: <20191024230327.140935-3-jmattson@google.com>
Mime-Version: 1.0
References: <20191024230327.140935-1-jmattson@google.com>
X-Mailer: git-send-email 2.24.0.rc0.303.g954a862665-goog
Subject: [PATCH v3 2/3] kvm: Allocate memslots and buses before calling
 kvm_arch_init_vm
From: Jim Mattson <jmattson@google.com>
To: kvm@vger.kernel.org, Paolo Bonzini <pbonzini@redhat.com>,
        Sean Christopherson <sean.j.christopherson@intel.com>,
        John Sperbeck <jsperbeck@google.com>,
        Junaid Shahid <junaids@google.com>
Cc: Jim Mattson <jmattson@google.com>
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

This reorganization will allow us to call kvm_arch_destroy_vm in the
event that kvm_create_vm fails after calling kvm_arch_init_vm.

Suggested-by: Junaid Shahid <junaids@google.com>
Signed-off-by: Jim Mattson <jmattson@google.com>
Reviewed-by: Junaid Shahid <junaids@google.com>
---
 virt/kvm/kvm_main.c | 40 +++++++++++++++++++++-------------------
 1 file changed, 21 insertions(+), 19 deletions(-)

diff --git a/virt/kvm/kvm_main.c b/virt/kvm/kvm_main.c
index 525e0dbc623f9..77819597d7e8e 100644
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@ -627,8 +627,9 @@ static int kvm_create_vm_debugfs(struct kvm *kvm, int fd)
 
 static struct kvm *kvm_create_vm(unsigned long type)
 {
-	int r, i;
 	struct kvm *kvm = kvm_arch_alloc_vm();
+	int r = -ENOMEM;
+	int i;
 
 	if (!kvm)
 		return ERR_PTR(-ENOMEM);
@@ -642,6 +643,25 @@ static struct kvm *kvm_create_vm(unsigned long type)
 	mutex_init(&kvm->slots_lock);
 	INIT_LIST_HEAD(&kvm->devices);
 
+	BUILD_BUG_ON(KVM_MEM_SLOTS_NUM > SHRT_MAX);
+
+	for (i = 0; i < KVM_ADDRESS_SPACE_NUM; i++) {
+		struct kvm_memslots *slots = kvm_alloc_memslots();
+
+		if (!slots)
+			goto out_err_no_disable;
+		/* Generations must be different for each address space. */
+		slots->generation = i;
+		rcu_assign_pointer(kvm->memslots[i], slots);
+	}
+
+	for (i = 0; i < KVM_NR_BUSES; i++) {
+		rcu_assign_pointer(kvm->buses[i],
+			kzalloc(sizeof(struct kvm_io_bus), GFP_KERNEL_ACCOUNT));
+		if (!kvm->buses[i])
+			goto out_err_no_disable;
+	}
+
 	r = kvm_arch_init_vm(kvm, type);
 	if (r)
 		goto out_err_no_disable;
@@ -654,28 +674,10 @@ static struct kvm *kvm_create_vm(unsigned long type)
 	INIT_HLIST_HEAD(&kvm->irq_ack_notifier_list);
 #endif
 
-	BUILD_BUG_ON(KVM_MEM_SLOTS_NUM > SHRT_MAX);
-
-	r = -ENOMEM;
-	for (i = 0; i < KVM_ADDRESS_SPACE_NUM; i++) {
-		struct kvm_memslots *slots = kvm_alloc_memslots();
-		if (!slots)
-			goto out_err_no_srcu;
-		/* Generations must be different for each address space. */
-		slots->generation = i;
-		rcu_assign_pointer(kvm->memslots[i], slots);
-	}
-
 	if (init_srcu_struct(&kvm->srcu))
 		goto out_err_no_srcu;
 	if (init_srcu_struct(&kvm->irq_srcu))
 		goto out_err_no_irq_srcu;
-	for (i = 0; i < KVM_NR_BUSES; i++) {
-		rcu_assign_pointer(kvm->buses[i],
-			kzalloc(sizeof(struct kvm_io_bus), GFP_KERNEL_ACCOUNT));
-		if (!kvm->buses[i])
-			goto out_err;
-	}
 
 	r = kvm_init_mmu_notifier(kvm);
 	if (r)

From patchwork Thu Oct 24 23:03:27 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Jim Mattson <jmattson@google.com>
X-Patchwork-Id: 11211057
Return-Path: <SRS0=LVJf=YR=vger.kernel.org=kvm-owner@kernel.org>
Received: from mail.kernel.org (pdx-korg-mail-1.web.codeaurora.org
 [172.30.200.123])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id A4F6414ED
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 24 Oct 2019 23:03:50 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 832D721929
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 24 Oct 2019 23:03:50 +0000 (UTC)
Authentication-Results: mail.kernel.org;
	dkim=pass (2048-bit key) header.d=google.com header.i=@google.com
 header.b="EFOuKlNK"
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1733255AbfJXXDt (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Thu, 24 Oct 2019 19:03:49 -0400
Received: from mail-pf1-f202.google.com ([209.85.210.202]:50551 "EHLO
        mail-pf1-f202.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1733241AbfJXXDt (ORCPT <rfc822;kvm@vger.kernel.org>);
        Thu, 24 Oct 2019 19:03:49 -0400
Received: by mail-pf1-f202.google.com with SMTP id y191so341632pfg.17
        for <kvm@vger.kernel.org>; Thu, 24 Oct 2019 16:03:48 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=date:in-reply-to:message-id:mime-version:references:subject:from:to
         :cc;
        bh=ewOgdXmkRaG77Ncabl1Le2AWyjyNwQvNzTMJoq6ee0U=;
        b=EFOuKlNK4oJukTE4z/hsRGeSfxswOLvXRbVcP9e5N7xArb4035qPBTAw8fpXN9ibu5
         P+skpg58nqh9pFnXNKC5JA/VF3VI/skMPkq7hggZEjADM8Q7qQVVjUG41983qCXuS9To
         rBzbLz/w0ge+xRZkiXS1Ko3Gdn20ubR7mqKFDbb72mBFj3UvGHF4KIAItPuIRjrobw8Z
         XcpgdIbO/wKyAuw5/McF2ac/52uMzmnGSvTKsfQlu0KSFjUXlHe3bZE5rxoP9YWldJsR
         caoPIS1vMAZBqKp0+Aem5EG43FNt3J9PBby99dPwfSui+2pekMo8CsaJgr9oGuEvOfYB
         U74g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:in-reply-to:message-id:mime-version
         :references:subject:from:to:cc;
        bh=ewOgdXmkRaG77Ncabl1Le2AWyjyNwQvNzTMJoq6ee0U=;
        b=Sl6RCF847qMTxlnX2Ye7lJIvvRUAfmAxOVNZLJmxJLBrcckV91CFQ+/2RzUmctEZhp
         2mxFtzg9LbdIkAM+AZWL4PYCjqrx1HwPhFLyUjFYplezD543M+szTBIYQ/XPK5cYXbQT
         5UPZR7OUUg6ULBgNPcqzjHEltelKQXpqLp+Gaulol9yPsHj9nZyCYTxOIA4oMD7/qfNg
         H1pa57hvKOOWnaLUlQNOXpG3Ek2lwIlfGgRVgPFpd4jJAh7kuYgPz2wP3b/A2nzYLiL9
         BvbTNPGuJBU89kT6lSZ/C0k1ZeXnLgKzaUllpuHdSBNlG0l1BRnTa+M59TAbRHysmrLJ
         twxA==
X-Gm-Message-State: APjAAAUgOAe6SY2bBoI6FY7gVyn5Wq6BaT+DsetAcI1Ok/RHyWp0GOie
        VT1GKDDb2bVl5pK6nlVbRzsI/TXdpbJgT3+ZzfZbRMjH3a9sxvxZzDXcDZP0mzNc19e5GN0t7wu
        3J6l87xDXCSnHxuY0iLldyXqXTgaCXx3F/hkph7Y5p6xCN48/yQ7vn4XwdPT0tDw=
X-Google-Smtp-Source: 
 APXvYqy8XQGl5Wr2QHQLbcrxYxRJou9PTb+oqHlsrCqsam1d+EQuyGhqXdTRh+4UPcP1ExJ42zAWtVRLZR+XWQ==
X-Received: by 2002:a65:46c8:: with SMTP id n8mr559794pgr.354.1571958228090;
 Thu, 24 Oct 2019 16:03:48 -0700 (PDT)
Date: Thu, 24 Oct 2019 16:03:27 -0700
In-Reply-To: <20191024230327.140935-1-jmattson@google.com>
Message-Id: <20191024230327.140935-4-jmattson@google.com>
Mime-Version: 1.0
References: <20191024230327.140935-1-jmattson@google.com>
X-Mailer: git-send-email 2.24.0.rc0.303.g954a862665-goog
Subject: [PATCH v3 3/3] kvm: call kvm_arch_destroy_vm if vm creation fails
From: Jim Mattson <jmattson@google.com>
To: kvm@vger.kernel.org, Paolo Bonzini <pbonzini@redhat.com>,
        Sean Christopherson <sean.j.christopherson@intel.com>,
        John Sperbeck <jsperbeck@google.com>,
        Junaid Shahid <junaids@google.com>
Cc: Jim Mattson <jmattson@google.com>
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

From: John Sperbeck <jsperbeck@google.com>

In kvm_create_vm(), if we've successfully called kvm_arch_init_vm(), but
then fail later in the function, we need to call kvm_arch_destroy_vm()
so that it can do any necessary cleanup (like freeing memory).

Fixes: 44a95dae1d229a ("KVM: x86: Detect and Initialize AVIC support")

Signed-off-by: John Sperbeck <jsperbeck@google.com>
Signed-off-by: Jim Mattson <jmattson@google.com>
Reviewed-by: Junaid Shahid <junaids@google.com>
---
 virt/kvm/kvm_main.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/virt/kvm/kvm_main.c b/virt/kvm/kvm_main.c
index 77819597d7e8e..f8f0106f8d20f 100644
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@ -649,7 +649,7 @@ static struct kvm *kvm_create_vm(unsigned long type)
 		struct kvm_memslots *slots = kvm_alloc_memslots();
 
 		if (!slots)
-			goto out_err_no_disable;
+			goto out_err_no_arch_destroy_vm;
 		/* Generations must be different for each address space. */
 		slots->generation = i;
 		rcu_assign_pointer(kvm->memslots[i], slots);
@@ -659,12 +659,12 @@ static struct kvm *kvm_create_vm(unsigned long type)
 		rcu_assign_pointer(kvm->buses[i],
 			kzalloc(sizeof(struct kvm_io_bus), GFP_KERNEL_ACCOUNT));
 		if (!kvm->buses[i])
-			goto out_err_no_disable;
+			goto out_err_no_arch_destroy_vm;
 	}
 
 	r = kvm_arch_init_vm(kvm, type);
 	if (r)
-		goto out_err_no_disable;
+		goto out_err_no_arch_destroy_vm;
 
 	r = hardware_enable_all();
 	if (r)
@@ -685,7 +685,7 @@ static struct kvm *kvm_create_vm(unsigned long type)
 
 	/*
 	 * kvm_get_kvm() isn't legal while the vm is being created
-	 * (e.g. in kvm_arch_init_vm).
+	 * (e.g. in kvm_arch_init_vm or kvm_arch_destroy_vm).
 	 */
 	refcount_set(&kvm->users_count, 1);
 
@@ -704,6 +704,8 @@ static struct kvm *kvm_create_vm(unsigned long type)
 out_err_no_srcu:
 	hardware_disable_all();
 out_err_no_disable:
+	kvm_arch_destroy_vm(kvm);
+out_err_no_arch_destroy_vm:
 	for (i = 0; i < KVM_NR_BUSES; i++)
 		kfree(kvm_get_bus(kvm, i));
 	for (i = 0; i < KVM_ADDRESS_SPACE_NUM; i++)
