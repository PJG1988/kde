From patchwork Thu Aug 22 14:30:19 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Tianyu Lan <lantianyu1986@gmail.com>
X-Patchwork-Id: 11109457
Return-Path: <SRS0=oWd0=WS=vger.kernel.org=kvm-owner@kernel.org>
Received: from mail.kernel.org (pdx-korg-mail-1.web.codeaurora.org
 [172.30.200.123])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 94B9013B1
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 22 Aug 2019 14:30:44 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 72EE123400
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 22 Aug 2019 14:30:44 +0000 (UTC)
Authentication-Results: mail.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com
 header.b="bqTEvUnG"
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2388753AbfHVOak (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Thu, 22 Aug 2019 10:30:40 -0400
Received: from mail-pl1-f193.google.com ([209.85.214.193]:42535 "EHLO
        mail-pl1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1732001AbfHVOak (ORCPT <rfc822;kvm@vger.kernel.org>);
        Thu, 22 Aug 2019 10:30:40 -0400
Received: by mail-pl1-f193.google.com with SMTP id y1so3565592plp.9;
        Thu, 22 Aug 2019 07:30:39 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references;
        bh=oI7D6WyA6/0Ot6DL7sm+Im0+wd1osEcKoYF4hLt/A6Q=;
        b=bqTEvUnG9CkxP0I0rRb+w5sdxJLU17GgXMeLehe0ZeJLc1H8Q+A/G63lfshJ7dSmBs
         4QuzgmIPwYM/yc7IJm1Q/tyT7TvUu76f+teotVFE79psBYuRFKjV59gMb9fVnbK3/Lav
         Yugy/a96E6FUTbV55wqOr2NI4vUXMd+FHoa/sdzrQ4E5k2IZiw4Vbxrm72TgaOiqrIxW
         j2kQOyLzNDZ4T8mvNIWwJkFr01XmjHI8ACD8VpJ99URVNWHAxtDsTRealke7jl3RLMNA
         ST5FqTS7Lo8hxUERZMN0+LZX8djDFwjOElp1UyDs3l75RZXCugFq+S5jae5G61u7XKnL
         5pMQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references;
        bh=oI7D6WyA6/0Ot6DL7sm+Im0+wd1osEcKoYF4hLt/A6Q=;
        b=VW37oEMPF/rJlmz4ekRezqVZvylWaGnz4SCnDS0I9k5xxHmmBB2Ayv7xtApWnzzTsK
         AU4YbJ62gm0hSwi0qmKUancqEVQwDwe3ILHMkDYJqtChkywUfCCM587atThm7+V2yCTy
         ZiIsUWYyhwOkYMYgOKlU0dkwhxFxBiRMbrN7s69RyG0N6gipiowwFeXmchC0IAO3kByK
         CkCfikmMnXWxvQv1k0lo+3/UQVpZR1wqaOgWa2Rr3ZxuSkzJGaQF+vYBius5MqixBIOv
         y1VfMP4VtYGt4upNsukrI3PY+WVo3/M62LSJZAn2Bz0v4vi18WMD3nQOGLZb9TdoUVdq
         brrw==
X-Gm-Message-State: APjAAAWhRVgWg5xO4aWKY0ALz6XeTC5ZnjJS3gjDTm3H0wxqb6CK6j8P
        +wGF4dFlMa2tJ1SMgrbSYtA=
X-Google-Smtp-Source: 
 APXvYqx/ED9fclzrzlKYk9uUT7m5f+KXtvtU5E2+5f5yuk7lBLyiPkGogN/krQ53jkucRpYQSLrw3g==
X-Received: by 2002:a17:902:9895:: with SMTP id
 s21mr25242438plp.255.1566484239694;
        Thu, 22 Aug 2019 07:30:39 -0700 (PDT)
Received: from localhost.corp.microsoft.com ([167.220.255.114])
        by smtp.googlemail.com with ESMTPSA id
 r23sm32263161pfg.10.2019.08.22.07.30.34
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Thu, 22 Aug 2019 07:30:39 -0700 (PDT)
From: lantianyu1986@gmail.com
X-Google-Original-From: Tianyu.Lan@microsoft.com
To: pbonzini@redhat.com, rkrcmar@redhat.com, corbet@lwn.net,
        kys@microsoft.com, haiyangz@microsoft.com, sthemmin@microsoft.com,
        sashal@kernel.org, tglx@linutronix.de, mingo@redhat.com,
        bp@alien8.de, hpa@zytor.com, x86@kernel.org,
        michael.h.kelley@microsoft.com
Cc: Tianyu Lan <Tianyu.Lan@microsoft.com>, kvm@vger.kernel.org,
        linux-doc@vger.kernel.org, linux-kernel@vger.kernel.org,
        linux-hyperv@vger.kernel.org, vkuznets@redhat.com
Subject: [PATCH V4 1/3] x86/Hyper-V: Fix definition of struct
 hv_vp_assist_page
Date: Thu, 22 Aug 2019 22:30:19 +0800
Message-Id: <20190822143021.7518-2-Tianyu.Lan@microsoft.com>
X-Mailer: git-send-email 2.14.5
In-Reply-To: <20190822143021.7518-1-Tianyu.Lan@microsoft.com>
References: <20190822143021.7518-1-Tianyu.Lan@microsoft.com>
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

From: Tianyu Lan <Tianyu.Lan@microsoft.com>

The struct hv_vp_assist_page was defined incorrectly.
The "vtl_control" should be u64[3], "nested_enlightenments
_control" should be a u64 and there are 7 reserved bytes
following "enlighten_vmentry". Fix the definition.

Signed-off-by: Tianyu Lan <Tianyu.Lan@microsoft.com>
---
Change since v3:
	- Update changelog 
Change since v1:
	- Move definition of struct hv_nested_enlightenments_control
       into this patch to fix offset issue.
---
 arch/x86/include/asm/hyperv-tlfs.h | 20 +++++++++++++++-----
 1 file changed, 15 insertions(+), 5 deletions(-)

diff --git a/arch/x86/include/asm/hyperv-tlfs.h b/arch/x86/include/asm/hyperv-tlfs.h
index af78cd72b8f3..cf0b2a04271d 100644
--- a/arch/x86/include/asm/hyperv-tlfs.h
+++ b/arch/x86/include/asm/hyperv-tlfs.h
@@ -514,14 +514,24 @@ struct hv_timer_message_payload {
 	__u64 delivery_time;	/* When the message was delivered */
 } __packed;
 
+struct hv_nested_enlightenments_control {
+	struct {
+		__u32 directhypercall:1;
+		__u32 reserved:31;
+	} features;
+	struct {
+		__u32 reserved;
+	} hypercallControls;
+} __packed;
+
 /* Define virtual processor assist page structure. */
 struct hv_vp_assist_page {
 	__u32 apic_assist;
-	__u32 reserved;
-	__u64 vtl_control[2];
-	__u64 nested_enlightenments_control[2];
-	__u32 enlighten_vmentry;
-	__u32 padding;
+	__u32 reserved1;
+	__u64 vtl_control[3];
+	struct hv_nested_enlightenments_control nested_control;
+	__u8 enlighten_vmentry;
+	__u8 reserved2[7];
 	__u64 current_nested_vmcs;
 } __packed;
 

From patchwork Thu Aug 22 14:30:20 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Tianyu Lan <lantianyu1986@gmail.com>
X-Patchwork-Id: 11109459
Return-Path: <SRS0=oWd0=WS=vger.kernel.org=kvm-owner@kernel.org>
Received: from mail.kernel.org (pdx-korg-mail-1.web.codeaurora.org
 [172.30.200.123])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 2A6C213A4
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 22 Aug 2019 14:30:51 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 0009023406
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 22 Aug 2019 14:30:50 +0000 (UTC)
Authentication-Results: mail.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com
 header.b="MAdP3FsX"
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2388674AbfHVOar (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Thu, 22 Aug 2019 10:30:47 -0400
Received: from mail-pl1-f195.google.com ([209.85.214.195]:40782 "EHLO
        mail-pl1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1732001AbfHVOap (ORCPT <rfc822;kvm@vger.kernel.org>);
        Thu, 22 Aug 2019 10:30:45 -0400
Received: by mail-pl1-f195.google.com with SMTP id h3so3582647pls.7;
        Thu, 22 Aug 2019 07:30:45 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references;
        bh=a4p8TCPaKfvEooizyzxHRIZAkY4d+DzJCKHmH6UyvCo=;
        b=MAdP3FsXFIrJVFxUSj2otOJoFvfqmDO4tlehtTrismgS9VWaoUbSDZ7iiGkOIl8ABq
         +R0lxcqwgaMHRWBPVZjRr11rLMFNfF9E1/n3bm0ur2uDpHcYwNiunvkQDy00EpPZQLkC
         2I6b5nyVgR77g3KgCw6cX6JFOmeJIcZy2HBlpQuxK8fKLb5D4lNGkRc8USRR2wIw4kke
         0/7jcrc5jpjqbMcIzrUy057QTDW2ZJY242WvPtstx9GFS+F46HAAhQmxnAEIZIuQtt0S
         kalZ8NM/e2CABcSb4MhGanmdmmSxlCP9tgkTgG5qDF2AWnUPSumsDhIQFa8l4hJ0VtJs
         IiOA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references;
        bh=a4p8TCPaKfvEooizyzxHRIZAkY4d+DzJCKHmH6UyvCo=;
        b=oJVoikOozfxx12V+M8QYVvx8Kix7pcOHAMvAFw6CDKglRxQolIa6habbdeK+GDK7+O
         7jjOtKepIMjLKQOMriwnhF41wSnM1lWFs4+SQ1ESj/5bHbc+uDZg4Cgua60QCWUiU8HF
         twBkgk0JcLnX2sN8cVxKtjPXkfNIN9EjEEwE1tL9WoJF0wp6cxW9opI4ciDJu/PQY+1z
         JK4yGOwK0bsGn2ZySChiCmsJrZb3kQ8ftRs1OBsv1LrIbEBwSxthw91F8sdD50otYaai
         0DI0u0LzAbgOPwd/i7HJUiqRmmzEHTeNUOfMscGRgWioqLhx/Mdl3yGlBeDFD2vIjxvh
         Fwkw==
X-Gm-Message-State: APjAAAXwSkT4zQvHw2fPeDxuEbYo5xFBCaXCNC7cHv1tXrIEgvwvX3N+
        aM0zFrzA0r8D5fquwX+R+NM=
X-Google-Smtp-Source: 
 APXvYqwALLBfgiwxGFa9tOYNMRQrYeu3WlICxCBO1gzKOzDYuX9mmAPLFJ71qGPupq8dDLKzgc0xVw==
X-Received: by 2002:a17:902:b084:: with SMTP id
 p4mr39521574plr.309.1566484245065;
        Thu, 22 Aug 2019 07:30:45 -0700 (PDT)
Received: from localhost.corp.microsoft.com ([167.220.255.114])
        by smtp.googlemail.com with ESMTPSA id
 r23sm32263161pfg.10.2019.08.22.07.30.39
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Thu, 22 Aug 2019 07:30:44 -0700 (PDT)
From: lantianyu1986@gmail.com
X-Google-Original-From: Tianyu.Lan@microsoft.com
To: pbonzini@redhat.com, rkrcmar@redhat.com, corbet@lwn.net,
        kys@microsoft.com, haiyangz@microsoft.com, sthemmin@microsoft.com,
        sashal@kernel.org, tglx@linutronix.de, mingo@redhat.com,
        bp@alien8.de, hpa@zytor.com, x86@kernel.org,
        michael.h.kelley@microsoft.com
Cc: Tianyu Lan <Tianyu.Lan@microsoft.com>, kvm@vger.kernel.org,
        linux-doc@vger.kernel.org, linux-kernel@vger.kernel.org,
        linux-hyperv@vger.kernel.org, vkuznets@redhat.com
Subject: [PATCH V4 2/3] KVM/Hyper-V: Add new KVM capability
 KVM_CAP_HYPERV_DIRECT_TLBFLUSH
Date: Thu, 22 Aug 2019 22:30:20 +0800
Message-Id: <20190822143021.7518-3-Tianyu.Lan@microsoft.com>
X-Mailer: git-send-email 2.14.5
In-Reply-To: <20190822143021.7518-1-Tianyu.Lan@microsoft.com>
References: <20190822143021.7518-1-Tianyu.Lan@microsoft.com>
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

From: Tianyu Lan <Tianyu.Lan@microsoft.com>

Hyper-V direct tlb flush function should be enabled for
guest that only uses Hyper-V hypercall. User space
hypervisor(e.g, Qemu) can disable KVM identification in
CPUID and just exposes Hyper-V identification to make
sure the precondition. Add new KVM capability KVM_CAP_
HYPERV_DIRECT_TLBFLUSH for user space to enable Hyper-V
direct tlb function and this function is default to be
disabled in KVM.

Signed-off-by: Tianyu Lan <Tianyu.Lan@microsoft.com>
---
Change since v3:
	- Update Changelog.
Change since v1:
	- Update description of KVM_CAP_HYPERV_DIRECT_TLBFLUSH
        in the KVM API doc.
---
 Documentation/virtual/kvm/api.txt | 13 +++++++++++++
 arch/x86/include/asm/kvm_host.h   |  2 ++
 arch/x86/kvm/x86.c                |  8 ++++++++
 include/uapi/linux/kvm.h          |  1 +
 4 files changed, 24 insertions(+)

diff --git a/Documentation/virtual/kvm/api.txt b/Documentation/virtual/kvm/api.txt
index 2cd6250b2896..0c6e1b25d0c8 100644
--- a/Documentation/virtual/kvm/api.txt
+++ b/Documentation/virtual/kvm/api.txt
@@ -5289,3 +5289,16 @@ Architectures: x86
 This capability indicates that KVM supports paravirtualized Hyper-V IPI send
 hypercalls:
 HvCallSendSyntheticClusterIpi, HvCallSendSyntheticClusterIpiEx.
+8.21 KVM_CAP_HYPERV_DIRECT_TLBFLUSH
+
+Architecture: x86
+
+This capability indicates that KVM running on top of Hyper-V hypervisor
+enables Direct TLB flush for its guests meaning that TLB flush
+hypercalls are handled by Level 0 hypervisor (Hyper-V) bypassing KVM.
+Due to the different ABI for hypercall parameters between Hyper-V and
+KVM, enabling this capability effectively disables all hypercall
+handling by KVM (as some KVM hypercall may be mistakenly treated as TLB
+flush hypercalls by Hyper-V) so userspace should disable KVM identification
+in CPUID and only exposes Hyper-V identification. In this case, guest
+thinks it's running on Hyper-V and only use Hyper-V hypercalls.
diff --git a/arch/x86/include/asm/kvm_host.h b/arch/x86/include/asm/kvm_host.h
index 0cc5b611a113..667d154e89d4 100644
--- a/arch/x86/include/asm/kvm_host.h
+++ b/arch/x86/include/asm/kvm_host.h
@@ -1205,6 +1205,8 @@ struct kvm_x86_ops {
 	uint16_t (*nested_get_evmcs_version)(struct kvm_vcpu *vcpu);
 
 	bool (*need_emulation_on_page_fault)(struct kvm_vcpu *vcpu);
+
+	int (*enable_direct_tlbflush)(struct kvm_vcpu *vcpu);
 };
 
 struct kvm_arch_async_pf {
diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index 9d7b9e6a0939..a9d8ee7f7bf0 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -3183,6 +3183,9 @@ int kvm_vm_ioctl_check_extension(struct kvm *kvm, long ext)
 		r = kvm_x86_ops->get_nested_state ?
 			kvm_x86_ops->get_nested_state(NULL, NULL, 0) : 0;
 		break;
+	case KVM_CAP_HYPERV_DIRECT_TLBFLUSH:
+		r = kvm_x86_ops->enable_direct_tlbflush ? 1 : 0;
+		break;
 	default:
 		break;
 	}
@@ -3953,6 +3956,11 @@ static int kvm_vcpu_ioctl_enable_cap(struct kvm_vcpu *vcpu,
 				r = -EFAULT;
 		}
 		return r;
+	case KVM_CAP_HYPERV_DIRECT_TLBFLUSH:
+		if (!kvm_x86_ops->enable_direct_tlbflush)
+			return -ENOTTY;
+
+		return kvm_x86_ops->enable_direct_tlbflush(vcpu);
 
 	default:
 		return -EINVAL;
diff --git a/include/uapi/linux/kvm.h b/include/uapi/linux/kvm.h
index a7c19540ce21..cb959bc925b1 100644
--- a/include/uapi/linux/kvm.h
+++ b/include/uapi/linux/kvm.h
@@ -996,6 +996,7 @@ struct kvm_ppc_resize_hpt {
 #define KVM_CAP_ARM_PTRAUTH_ADDRESS 171
 #define KVM_CAP_ARM_PTRAUTH_GENERIC 172
 #define KVM_CAP_PMU_EVENT_FILTER 173
+#define KVM_CAP_HYPERV_DIRECT_TLBFLUSH 174
 
 #ifdef KVM_CAP_IRQ_ROUTING
 

From patchwork Thu Aug 22 14:30:21 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Tianyu Lan <lantianyu1986@gmail.com>
X-Patchwork-Id: 11109461
Return-Path: <SRS0=oWd0=WS=vger.kernel.org=kvm-owner@kernel.org>
Received: from mail.kernel.org (pdx-korg-mail-1.web.codeaurora.org
 [172.30.200.123])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 4081E13B1
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 22 Aug 2019 14:30:56 +0000 (UTC)
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.kernel.org (Postfix) with ESMTP id 11E0D23400
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 22 Aug 2019 14:30:56 +0000 (UTC)
Authentication-Results: mail.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com
 header.b="FGV/rUAD"
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2389027AbfHVOav (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Thu, 22 Aug 2019 10:30:51 -0400
Received: from mail-pf1-f195.google.com ([209.85.210.195]:38243 "EHLO
        mail-pf1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1732001AbfHVOau (ORCPT <rfc822;kvm@vger.kernel.org>);
        Thu, 22 Aug 2019 10:30:50 -0400
Received: by mail-pf1-f195.google.com with SMTP id o70so4096014pfg.5;
        Thu, 22 Aug 2019 07:30:50 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references;
        bh=RNQC63n6Fm1YHdNyfk/Lkjcq7Nl47jl6vkcYe0yjErw=;
        b=FGV/rUADkx1Ag2pr0ZUnYBp4s5HZiWYJbL4+qHCxALt/HRjVy2un3gdFifvB6gqh/P
         zKdLLnWlFRz6waWazEmp5OGCGKyhxJ4mvHQDCoI3Cm5Uz/wxaWiPiOXrcftIKm2irK7w
         ZzI0npbJU8d/wOnsZAStvPR2hQT9T0OSEjwSCjX5wHRXUDTE6VShqYEAztQsdVwNwE74
         hbyyN1huEuuF2YjcRwP50AEkecFaFf/jgKte7Fr7am4rt+Vp+y2GaGDTHUhFTvUDh4rt
         jtHzaElm0QBh+A7aOdtvxM+mFObTwyh/0mbCgAYTtWiZG1Uc9twcLjA2cjM2IBVr6pE5
         vvlA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references;
        bh=RNQC63n6Fm1YHdNyfk/Lkjcq7Nl47jl6vkcYe0yjErw=;
        b=D4xg+Cy8plzd1Ya1uCP8M/11/FkvskfCzczEs39adHTsJ9CxP9SKDS129H8D3tsb4R
         UX3mDl+MmXFqykG5cmCucxdp7QrTxhNIHAVw1j3Fegs8LdSpV4XA2VxKa9o7xfQ6YER1
         r3nBbN1X8Z8bxvWHssfnlJLQ2tdwrZ2AF/LUk5hkYVDAkjDpE+2bCjalkqTT7kq2hhYg
         DzjnGdormPG7K/P3gz9ce6x9b09nP9yyg/BFdhYvjH4iSmPdU9mDqaLlHYIyymG38KbF
         ifgSaXBOX75NkvZ1SqngZ0Vlw3/nwjlK5CgfkiF8OODRztz+jXQusxKHBlZpTX0IV/hn
         Psvw==
X-Gm-Message-State: APjAAAU6vYC84H1962XK6mEaYCDHswjlPJtJgLMCKorwSrpltjw7QBYI
        OByyCLZf27m4fIjFfdBfi4c=
X-Google-Smtp-Source: 
 APXvYqwDJfZNu6EwzOKImb8bvki8/OzBGcRQs5XbOsBD2vgDzlOQILxY05wKvTHb58QPq3+NNIs/Ww==
X-Received: by 2002:a65:49cc:: with SMTP id t12mr31774650pgs.83.1566484250068;
        Thu, 22 Aug 2019 07:30:50 -0700 (PDT)
Received: from localhost.corp.microsoft.com ([167.220.255.114])
        by smtp.googlemail.com with ESMTPSA id
 r23sm32263161pfg.10.2019.08.22.07.30.45
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Thu, 22 Aug 2019 07:30:49 -0700 (PDT)
From: lantianyu1986@gmail.com
X-Google-Original-From: Tianyu.Lan@microsoft.com
To: kys@microsoft.com, haiyangz@microsoft.com, sthemmin@microsoft.com,
        sashal@kernel.org, tglx@linutronix.de, mingo@redhat.com,
        bp@alien8.de, hpa@zytor.com, x86@kernel.org, pbonzini@redhat.com,
        rkrcmar@redhat.com, michael.h.kelley@microsoft.com
Cc: Vitaly Kuznetsov <vkuznets@redhat.com>,
        linux-hyperv@vger.kernel.org, linux-kernel@vger.kernel.org,
        kvm@vger.kernel.org, Tianyu Lan <Tianyu.Lan@microsoft.com>
Subject: [PATCH V4 3/3] KVM/Hyper-V/VMX: Add direct tlb flush support
Date: Thu, 22 Aug 2019 22:30:21 +0800
Message-Id: <20190822143021.7518-4-Tianyu.Lan@microsoft.com>
X-Mailer: git-send-email 2.14.5
In-Reply-To: <20190822143021.7518-1-Tianyu.Lan@microsoft.com>
References: <20190822143021.7518-1-Tianyu.Lan@microsoft.com>
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

From: Vitaly Kuznetsov <vkuznets@redhat.com>

Hyper-V provides direct tlb flush function which helps
L1 Hypervisor to handle Hyper-V tlb flush request from
L2 guest. Add the function support for VMX.

Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
Signed-off-by: Tianyu Lan <Tianyu.Lan@microsoft.com>
---
Change since v3:
       - Update changlog
Change since v2:
       - Move hv assist page(hv_pa_pg) from struct kvm  to struct kvm_hv.
---
 arch/x86/include/asm/hyperv-tlfs.h |  4 ++++
 arch/x86/include/asm/kvm_host.h    |  2 ++
 arch/x86/kvm/vmx/evmcs.h           |  2 ++
 arch/x86/kvm/vmx/vmx.c             | 39 ++++++++++++++++++++++++++++++++++++++
 4 files changed, 47 insertions(+)

diff --git a/arch/x86/include/asm/hyperv-tlfs.h b/arch/x86/include/asm/hyperv-tlfs.h
index cf0b2a04271d..d53d6e4a6210 100644
--- a/arch/x86/include/asm/hyperv-tlfs.h
+++ b/arch/x86/include/asm/hyperv-tlfs.h
@@ -171,6 +171,7 @@
 #define HV_X64_ENLIGHTENED_VMCS_RECOMMENDED		BIT(14)
 
 /* Nested features. These are HYPERV_CPUID_NESTED_FEATURES.EAX bits. */
+#define HV_X64_NESTED_DIRECT_FLUSH			BIT(17)
 #define HV_X64_NESTED_GUEST_MAPPING_FLUSH		BIT(18)
 #define HV_X64_NESTED_MSR_BITMAP			BIT(19)
 
@@ -882,4 +883,7 @@ struct hv_tlb_flush_ex {
 	u64 gva_list[];
 } __packed;
 
+struct hv_partition_assist_pg {
+	u32 tlb_lock_count;
+};
 #endif
diff --git a/arch/x86/include/asm/kvm_host.h b/arch/x86/include/asm/kvm_host.h
index 667d154e89d4..ad4b5c02db0e 100644
--- a/arch/x86/include/asm/kvm_host.h
+++ b/arch/x86/include/asm/kvm_host.h
@@ -840,6 +840,8 @@ struct kvm_hv {
 
 	/* How many vCPUs have VP index != vCPU index */
 	atomic_t num_mismatched_vp_indexes;
+
+	struct hv_partition_assist_pg *hv_pa_pg;
 };
 
 enum kvm_irqchip_mode {
diff --git a/arch/x86/kvm/vmx/evmcs.h b/arch/x86/kvm/vmx/evmcs.h
index 39a24eec8884..07ebf6882a45 100644
--- a/arch/x86/kvm/vmx/evmcs.h
+++ b/arch/x86/kvm/vmx/evmcs.h
@@ -178,6 +178,8 @@ static inline void evmcs_load(u64 phys_addr)
 	struct hv_vp_assist_page *vp_ap =
 		hv_get_vp_assist_page(smp_processor_id());
 
+	if (current_evmcs->hv_enlightenments_control.nested_flush_hypercall)
+		vp_ap->nested_control.features.directhypercall = 1;
 	vp_ap->current_nested_vmcs = phys_addr;
 	vp_ap->enlighten_vmentry = 1;
 }
diff --git a/arch/x86/kvm/vmx/vmx.c b/arch/x86/kvm/vmx/vmx.c
index 84f8d49a2fd2..ed8056049070 100644
--- a/arch/x86/kvm/vmx/vmx.c
+++ b/arch/x86/kvm/vmx/vmx.c
@@ -486,6 +486,35 @@ static int hv_remote_flush_tlb(struct kvm *kvm)
 	return hv_remote_flush_tlb_with_range(kvm, NULL);
 }
 
+static int hv_enable_direct_tlbflush(struct kvm_vcpu *vcpu)
+{
+	struct hv_enlightened_vmcs *evmcs;
+	struct hv_partition_assist_pg **p_hv_pa_pg =
+			&vcpu->kvm->arch.hyperv.hv_pa_pg;
+	/*
+	 * Synthetic VM-Exit is not enabled in current code and so All
+	 * evmcs in singe VM shares same assist page.
+	 */
+	if (!*p_hv_pa_pg) {
+		*p_hv_pa_pg = kzalloc(PAGE_SIZE, GFP_KERNEL);
+		if (!*p_hv_pa_pg)
+			return -ENOMEM;
+		pr_debug("KVM: Hyper-V: allocated PA_PG for %llx\n",
+		       (u64)&vcpu->kvm);
+	}
+
+	evmcs = (struct hv_enlightened_vmcs *)to_vmx(vcpu)->loaded_vmcs->vmcs;
+
+	evmcs->partition_assist_page =
+		__pa(*p_hv_pa_pg);
+	evmcs->hv_vm_id = (u64)vcpu->kvm;
+	evmcs->hv_enlightenments_control.nested_flush_hypercall = 1;
+
+	pr_debug("KVM: Hyper-V: enabled DIRECT flush for %llx\n",
+		 (u64)vcpu->kvm);
+	return 0;
+}
+
 #endif /* IS_ENABLED(CONFIG_HYPERV) */
 
 /*
@@ -6516,6 +6545,9 @@ static void vmx_vcpu_run(struct kvm_vcpu *vcpu)
 		current_evmcs->hv_clean_fields |=
 			HV_VMX_ENLIGHTENED_CLEAN_FIELD_ALL;
 
+	if (static_branch_unlikely(&enable_evmcs))
+		current_evmcs->hv_vp_id = vcpu->arch.hyperv.vp_index;
+
 	/* MSR_IA32_DEBUGCTLMSR is zeroed on vmexit. Restore it if needed */
 	if (vmx->host_debugctlmsr)
 		update_debugctlmsr(vmx->host_debugctlmsr);
@@ -6583,6 +6615,7 @@ static struct kvm *vmx_vm_alloc(void)
 
 static void vmx_vm_free(struct kvm *kvm)
 {
+	kfree(kvm->arch.hyperv.hv_pa_pg);
 	vfree(to_kvm_vmx(kvm));
 }
 
@@ -7815,6 +7848,7 @@ static void vmx_exit(void)
 			if (!vp_ap)
 				continue;
 
+			vp_ap->nested_control.features.directhypercall = 0;
 			vp_ap->current_nested_vmcs = 0;
 			vp_ap->enlighten_vmentry = 0;
 		}
@@ -7854,6 +7888,11 @@ static int __init vmx_init(void)
 			pr_info("KVM: vmx: using Hyper-V Enlightened VMCS\n");
 			static_branch_enable(&enable_evmcs);
 		}
+
+		if (ms_hyperv.nested_features & HV_X64_NESTED_DIRECT_FLUSH)
+			vmx_x86_ops.enable_direct_tlbflush
+				= hv_enable_direct_tlbflush;
+
 	} else {
 		enlightened_vmcs = false;
 	}
